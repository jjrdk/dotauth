<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET sealed class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessToAddressInformation" xml:space="preserve">
    <value>Access to address information.</value>
  </data>
  <data name="AccessToEmailAddresses" xml:space="preserve">
    <value>Access to email addresses.</value>
  </data>
  <data name="AccessToOpenIdScope" xml:space="preserve">
    <value>Access to the OpenId scope.</value>
  </data>
  <data name="AccessToPhoneInformation" xml:space="preserve">
    <value>Access to phone information.</value>
  </data>
  <data name="AccessToProfileInformation" xml:space="preserve">
    <value>Access to the profile information.</value>
  </data>
  <data name="AccessToRoles" xml:space="preserve">
    <value>Access to your roles.</value>
  </data>
  <data name="Badrequest" xml:space="preserve">
    <value>Bad Request</value>
  </data>
  <data name="CouldNotDeleteClient" xml:space="preserve">
    <value>Could not delete client</value>
  </data>
  <data name="CouldNotUpdateApproval" xml:space="preserve">
    <value>Could not update approval for ticket {0}</value>
  </data>
  <data name="DeleteFailed" xml:space="preserve">
    <value>Delete failed</value>
  </data>
  <data name="DuplicateResourceOwner" xml:space="preserve">
    <value>A resource owner with same credentials already exists</value>
  </data>
  <data name="FailedToAddUser" xml:space="preserve">
    <value>Failed to add user</value>
  </data>
  <data name="Http400" xml:space="preserve">
    <value>The HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).</value>
  </data>
  <data name="Http401" xml:space="preserve">
    <value>The HTTP 401 Unauthorized client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.</value>
  </data>
  <data name="Http404" xml:space="preserve">
    <value>The HTTP 404 Not Found client error response code indicates that the server can't find the requested resource.</value>
  </data>
  <data name="Http500" xml:space="preserve">
    <value>The HyperText Transfer Protocol (HTTP) 500 Internal Server Error server error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.</value>
  </data>
  <data name="IdentifierIsMissing" xml:space="preserve">
    <value>Identifier is missing</value>
  </data>
  <data name="InputMissing" xml:space="preserve">
    <value>Input missing</value>
  </data>
  <data name="InternalServerError" xml:space="preserve">
    <value>Internal Server Error</value>
  </data>
  <data name="InvalidResource" xml:space="preserve">
    <value>Invalid resource</value>
  </data>
  <data name="InvalidUser" xml:space="preserve">
    <value>Invalid user</value>
  </data>
  <data name="ManageServerResources" xml:space="preserve">
    <value>Manage server resources.</value>
  </data>
  <data name="ManageUma" xml:space="preserve">
    <value>Manage user managed resources and policies.</value>
  </data>
  <data name="NoParameterInBodyRequest" xml:space="preserve">
    <value>No parameter in body request</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Not Found</value>
  </data>
  <data name="ParameterInRequestBodyIsNotValid" xml:space="preserve">
    <value>Parameter in request body not valid</value>
  </data>
  <data name="RegisterAClient" xml:space="preserve">
    <value>Register a client</value>
  </data>
  <data name="ResourceOwnerCredentialsAreNotCorrect" xml:space="preserve">
    <value>The resource owner credentials are not correct</value>
  </data>
  <data name="ResourceSetIdParameterNeedsToBeSpecified" xml:space="preserve">
    <value>The parameter resource_set_id needs to be specified</value>
  </data>
  <data name="TheClaimMustBeSpecified" xml:space="preserve">
    <value>The claim must be specified</value>
  </data>
  <data name="TheClientIdDoesntExist" xml:space="preserve">
    <value>The client id {0} doesn't exist</value>
  </data>
  <data name="TheConfirmationCodeMustBeSpecified" xml:space="preserve">
    <value>The confirmation code must be specified</value>
  </data>
  <data name="TheConsentCannotBeDeleted" xml:space="preserve">
    <value>The consent cannot be deleted</value>
  </data>
  <data name="TheFilterRuleFailed" xml:space="preserve">
    <value>The filter rule '{0}' failed</value>
  </data>
  <data name="TheIdentifierMustBeSpecified" xml:space="preserve">
    <value>The identifier must be specified</value>
  </data>
  <data name="TwoFactorNotProperlyConfigured" xml:space="preserve">
    <value>Two factor authenticator is not properly configured</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>Unauthorized</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="UpdateFailed" xml:space="preserve">
    <value>Update Failed</value>
  </data>
  <data name="AnErrorHasBeenRaisedWhenTryingToAuthenticate" xml:space="preserve">
    <value>an error {0} has been raised when trying to authenticate</value>
  </data>
  <data name="AtLeastOnePromptIsNotSupported" xml:space="preserve">
    <value>at least one prompt parameter is not supported</value>
  </data>
  <data name="AtLeastOneResponseTypeIsNotSupported" xml:space="preserve">
    <value>at least one response_type parameter is not supported</value>
  </data>
  <data name="ClientIsNotValid" xml:space="preserve">
    <value>The client id parameter {0} doesn't exist or is not valid</value>
  </data>
  <data name="DuplicateScopeValues" xml:space="preserve">
    <value>duplicate scopes {0} have been passed in parameter</value>
  </data>
  <data name="InternalError" xml:space="preserve">
    <value>Internal error</value>
  </data>
  <data name="MissingParameter" xml:space="preserve">
    <value>The parameter {0} is missing</value>
  </data>
  <data name="NoActiveAmr" xml:space="preserve">
    <value>no active AMR</value>
  </data>
  <data name="OneOfTheRequestUriIsNotValid" xml:space="preserve">
    <value>one of the request_uri is not valid</value>
  </data>
  <data name="OneOrMoreSectorIdentifierUriIsNotARedirectUri" xml:space="preserve">
    <value>one or more sector uri is not a redirect_uri</value>
  </data>
  <data name="ParameterIsNotCorrect" xml:space="preserve">
    <value>The parameter {0} is not correct</value>
  </data>
  <data name="PermissionRequested" xml:space="preserve">
    <value>Permission request has been submitted.</value>
  </data>
  <data name="PromptParameterShouldHaveOnlyNoneValue" xml:space="preserve">
    <value>prompt parameter should have only none value</value>
  </data>
  <data name="RedirectUrlIsNotValid" xml:space="preserve">
    <value>The redirect url {0} doesn't exist or is not valid</value>
  </data>
  <data name="RequestIsNotValid" xml:space="preserve">
    <value>The request is not valid</value>
  </data>
  <data name="ResourceOwnerCredentialsAreNotValid" xml:space="preserve">
    <value>resource owner credentials are not valid</value>
  </data>
  <data name="ScopesAreNotAllowedOrInvalid" xml:space="preserve">
    <value>The scopes {0} are not allowed or invalid</value>
  </data>
  <data name="TheAmrDoesntExist" xml:space="preserve">
    <value>The amr {0} doesn't exist</value>
  </data>
  <data name="TheAuthorizationCodeHasNotBeenIssuedForTheGivenClientId" xml:space="preserve">
    <value>The authorization code has not been issued for the given client id {0}</value>
  </data>
  <data name="TheAuthorizationCodeIsNotCorrect" xml:space="preserve">
    <value>The authorization code is not correct</value>
  </data>
  <data name="TheAuthorizationCodeIsObsolete" xml:space="preserve">
    <value>The authorization code is obsolete</value>
  </data>
  <data name="TheAuthorizationFlowIsNotSupported" xml:space="preserve">
    <value>The authorization flow is not supported</value>
  </data>
  <data name="TheAuthorizationPolicyIsNotSatisfied" xml:space="preserve">
    <value>The authorization policy is not satisfied</value>
  </data>
  <data name="TheAuthorizationRequestCannotBeProcessedBecauseThereIsNotValidPrompt" xml:space="preserve">
    <value>The authorization request cannot be processed because there is not valid prompt</value>
  </data>
  <data name="TheClaimIsNotValid" xml:space="preserve">
    <value>The claim {0} is not valid</value>
  </data>
  <data name="TheClaimsCannotBeUpdated" xml:space="preserve">
    <value>The claims cannot be updated</value>
  </data>
  <data name="TheClientAssertionIsNotAJweToken" xml:space="preserve">
    <value>The client assertion is not a JWE token</value>
  </data>
  <data name="TheClientAssertionIsNotAJwsToken" xml:space="preserve">
    <value>The client assertion is not a JWS token</value>
  </data>
  <data name="TheClientCannotBeAuthenticatedWithSecretBasic" xml:space="preserve">
    <value>The client cannot be authenticated with secret basic</value>
  </data>
  <data name="TheClientCannotBeAuthenticatedWithSecretPost" xml:space="preserve">
    <value>The client cannot be authenticated with secret post</value>
  </data>
  <data name="TheClientCannotBeAuthenticatedWithTls" xml:space="preserve">
    <value>The client cannot be authenticated with TLS</value>
  </data>
  <data name="TheClientDoesntContainASharedSecret" xml:space="preserve">
    <value>The client {0} doesn't have a shared secret</value>
  </data>
  <data name="TheClientDoesntSupportTheGrantType" xml:space="preserve">
    <value>The client {0} doesn't support the grant type {1}</value>
  </data>
  <data name="TheClientDoesntSupportTheResponseType" xml:space="preserve">
    <value>The client '{0}' doesn't support the response type: '{1}'</value>
  </data>
  <data name="TheClientRequiresPkce" xml:space="preserve">
    <value>The client {0} requires PKCE</value>
  </data>
  <data name="TheCodeVerifierIsNotCorrect" xml:space="preserve">
    <value>The code verifier is not correct</value>
  </data>
  <data name="TheCurrentAuthenticatedUserDoesntMatchWithTheIdentityToken" xml:space="preserve">
    <value>The current authenticated user doesn't match with the identity token</value>
  </data>
  <data name="TheIdentityTokenDoesntContainDotAuthAsAudience" xml:space="preserve">
    <value>The identity token does not contain DotAuth in the audience</value>
  </data>
  <data name="TheIdTokenHintParameterIsNotAValidToken" xml:space="preserve">
    <value>The id_token_hint parameter is not a valid token</value>
  </data>
  <data name="TheJwsPayloadCannotBeExtracted" xml:space="preserve">
    <value>The jws payload cannot be extracted</value>
  </data>
  <data name="TheParameterIsTokenEncryptedResponseAlgMustBeSpecified" xml:space="preserve">
    <value>The parameter id_token_encrypted_response_alg must be specified</value>
  </data>
  <data name="TheParameterRequestObjectEncryptionAlgMustBeSpecified" xml:space="preserve">
    <value>The parameter request_object_encryption_alg must be specified</value>
  </data>
  <data name="TheParameterUserInfoEncryptedResponseAlgMustBeSpecified" xml:space="preserve">
    <value>The parameter userinfo_encrypted_response_alg must be specified</value>
  </data>
  <data name="ThePasswordCannotBeUpdated" xml:space="preserve">
    <value>The password cannot be updated</value>
  </data>
  <data name="ThePromptParameterIsNotSupported" xml:space="preserve">
    <value>The prompt parameter {0} is not supported</value>
  </data>
  <data name="TheRedirectionUriIsNotWellFormed" xml:space="preserve">
    <value>Based on the RFC-3986 the redirection-uri is not well formed</value>
  </data>
  <data name="TheRedirectionUrlIsNotTheSame" xml:space="preserve">
    <value>The redirection url is not the same than the one passed in the authorization request</value>
  </data>
  <data name="TheRedirectUrlCannotContainsFragment" xml:space="preserve">
    <value>The redirect_uri {0} cannot contain fragment</value>
  </data>
  <data name="TheRedirectUrlIsNotValid" xml:space="preserve">
    <value>The redirect_uri {0} is not well formed</value>
  </data>
  <data name="TheRefreshTokenCanBeUsedOnlyByTheSameIssuer" xml:space="preserve">
    <value>The refresh token can be used only by the same issuer</value>
  </data>
  <data name="TheRefreshTokenIsNotValid" xml:space="preserve">
    <value>The refresh token is not valid</value>
  </data>
  <data name="TheRequestCannotBeExtractedFromTheCookie" xml:space="preserve">
    <value>The request cannot be extracted from the cookie</value>
  </data>
  <data name="TheRequestDownloadedFromRequestUriIsNotValid" xml:space="preserve">
    <value>The request downloaded from request URI is not valid</value>
  </data>
  <data name="TheRequestParameterIsNotCorrect" xml:space="preserve">
    <value>The request parameter is not correct</value>
  </data>
  <data name="TheRequestUriParameterIsNotWellFormed" xml:space="preserve">
    <value>The request_uri parameter is not well formed</value>
  </data>
  <data name="TheResourceOwnerCannotBeRemoved" xml:space="preserve">
    <value>The resource owner cannot be removed</value>
  </data>
  <data name="TheResourceSetDoesntExist" xml:space="preserve">
    <value>resource set {0} doesn't exist</value>
  </data>
  <data name="TheResponseCannotBeGeneratedBecauseResourceOwnerNeedsToBeAuthenticated" xml:space="preserve">
    <value>The response cannot be generated because the resource owner needs to be authenticated</value>
  </data>
  <data name="TheRoDoesntExist" xml:space="preserve">
    <value>The resource owner doesn't exist</value>
  </data>
  <data name="TheScopeAreNotValid" xml:space="preserve">
    <value>one or more scopes are not valid</value>
  </data>
  <data name="TheScopeDoesntExist" xml:space="preserve">
    <value>The scope '{0}' doesn't exist</value>
  </data>
  <data name="TheScopesNeedToBeSpecified" xml:space="preserve">
    <value>The scope(s) need(s) to be specified</value>
  </data>
  <data name="TheSectorIdentifierUrisCannotBeRetrieved" xml:space="preserve">
    <value>The sector identifier uris cannot be retrieved</value>
  </data>
  <data name="TheSignatureIsNotCorrect" xml:space="preserve">
    <value>The signature is not correct</value>
  </data>
  <data name="TheSubjectCannotBeRetrieved" xml:space="preserve">
    <value>The subject cannot be retrieved</value>
  </data>
  <data name="TheTicketCannotBeInserted" xml:space="preserve">
    <value>The ticket cannot be inserted</value>
  </data>
  <data name="TheTicketDoesntExist" xml:space="preserve">
    <value>The ticket {0} doesn't exist</value>
  </data>
  <data name="TheTicketIsExpired" xml:space="preserve">
    <value>The ticket is expired</value>
  </data>
  <data name="TheTokenDoesntExist" xml:space="preserve">
    <value>The token doesn't exist</value>
  </data>
  <data name="TheTokenHasNotBeenIssuedForTheGivenClientId" xml:space="preserve">
    <value>The token has not been issued for the given client id '{0}'</value>
  </data>
  <data name="TheTokenIsExpired" xml:space="preserve">
    <value>The token is expired</value>
  </data>
  <data name="TheTokenIsNotValid" xml:space="preserve">
    <value>The token is not valid</value>
  </data>
  <data name="TheUserNeedsToBeAuthenticated" xml:space="preserve">
    <value>The user needs to be authenticated</value>
  </data>
  <data name="TheUserNeedsToGiveHisConsent" xml:space="preserve">
    <value>The user needs to give his consent</value>
  </data>
  <data name="TwoFactorAuthenticationCannotBePerformed" xml:space="preserve">
    <value>two factor authentication cannot be performed</value>
  </data>
  <data name="TwoFactorAuthenticationIsNotEnabled" xml:space="preserve">
    <value>two factor authentication is not enabled</value>
  </data>
  <data name="TheConfirmationCodeCannotBeSaved" xml:space="preserve">
    <value>The confirmation code cannot be saved</value>
  </data>
  <data name="TheUrlIsNotWellFormed" xml:space="preserve">
    <value>The url is not well formed</value>
  </data>
  <data name="TheResourceOwnerCredentialsAreNotCorrect" xml:space="preserve">
    <value>The resource owner credentials are not correct</value>
  </data>
  <data name="LogAuthenticated" xml:space="preserve">
    <value>{0} authenticated</value>
  </data>
  <data name="LogCouldNotAuthenticate" xml:space="preserve">
    <value>Could not authenticate {0}</value>
  </data>
  <data name="InvalidScope" xml:space="preserve">
    <value>Invalid scope</value>
  </data>
  <data name="Key16char" xml:space="preserve">
    <value>Key must be at least 16 characters.</value>
  </data>
  <data name="CouldNotRevokeToken" xml:space="preserve">
    <value>Could not revoke token</value>
  </data>
  <data name="IdentityMissing" xml:space="preserve">
    <value>Missing identity</value>
  </data>
  <data name="MissingValues" xml:space="preserve">
    <value>Missing values</value>
  </data>
  <data name="AccessToRefreshToken" xml:space="preserve">
    <value>Allow client to obtain a refresh token for offline token requests.</value>
  </data>
  <data name="AmbiguousIdentity" xml:space="preserve">
    <value>The requestor identity is ambiguous</value>
  </data>
</root>