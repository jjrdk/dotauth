@using System.Collections.Generic
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Edit user";
    ViewBag.IsEditDisplayed = true;
    ViewBag.IsConsentDisplayed = false;
    ViewBag.IsIndexDisplayed = false;
    ViewBag.IsProfileDisplayed = false;
    var errors = new List<string>();
    foreach(var node in ViewData.ModelState)
    {
        foreach(var error in node.Value.Errors)
        {
            errors.Add(error.ErrorMessage);
        }
    }
}
@model DotAuth.ViewModels.UpdateResourceOwnerViewModel

<h4 class="header col s12">Edit Resource Owner</h4>

<div class="col s12">

    @if (errors.Count > 0)
    {
        foreach (var error in errors)
        {
            <div class="card red accent-1">
                <div class="card-content red-text text-darken-4">
                    <i class="material-icons prefix">error</i>
                    @error
                </div>
            </div>
        }
    }

    @if (ViewBag.IsUpdated)
    {
        <div class="card light-green accent-1">
            <div class="card-content light-green-text text-darken-4">
                <i class="material-icons prefix">check_circle</i>
                User is updated
            </div>
        </div>
    }

    @using (Html.BeginForm("UpdateCredentials", "User", null, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="card">
            <div class="card-content">
                <div class="card-title">Credentials</div>
            </div>
            <div class="card-action">
                <div class="row">
                    <!-- Login -->
                    <div class="input-field col s12 m6">
                        <i class="material-icons prefix">account_circle</i>
                        <input type="text" id="Login" value="@Model.Credentials.Login" disabled="disabled" readonly />
                        <label for="Login">Log In</label>
                    </div>
                </div>
                <div class="row">
                    <!-- Password -->
                    <div class="input-field col s12 m6">
                        <i class="material-icons prefix">lock_outline</i>
                        <input type="password" class="" value="@Model.Credentials.Password" name="Password" id="Password"/>
                        <label for="Password">Your password</label>
                    </div>
                    <!-- Repeat password -->
                    <div class="input-field col s12 m6">
                        <i class="material-icons prefix">lock</i>
                        <input type="password" class="" value="@Model.Credentials.RepeatPassword" name="RepeatPassword" id="RepeatPassword"/>
                        <label for="RepeatPassword">Repeat password</label>
                    </div>
                </div>
                <!-- Submit -->
                <div class="input-field">
                    <button type="submit" class="btn blue darken-3 waves-effect waves-light blue darken-3 waves-effect waves-light">Confirm</button>
                </div>
            </div>
        </div>
    }

    @using (Html.BeginForm("UpdateTwoFactor", "User", null, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="card">
            <div class="card-content">
                <div class="card-title">Two-Factor Authentication</div>
            </div>
            <div class="card-action">
                <div class="row">
                    @if (Model.TwoFactorAuthTypes == null || !Model.TwoFactorAuthTypes.Any())
                    {
                        <div class="col s12 grey-text text-lighten-1">
                            <i class="material-icons prefix">info_outline</i>No two-factor authenticator
                        </div>
                    }
                    else
                    {
                        <div class="input-field col s12 m6">
                            <select value="@Model.SelectedTwoFactorAuthType" name="SelectedTwoFactorAuthType">
                                <option value="">No two-factor authentication selected</option>
                                @foreach (var twoFactorAuthType in Model.TwoFactorAuthTypes)
                                {
                                    if (twoFactorAuthType == Model.SelectedTwoFactorAuthType)
                                    {
                                        <option value="@twoFactorAuthType" selected>@twoFactorAuthType</option>
                                    }
                                    else
                                    {
                                        <option value="@twoFactorAuthType">@twoFactorAuthType</option>
                                    }
                                }
                            </select>
                        </div>
                        <script>
                            $(document).ready(function () {
                                $('select').formSelect();
                            });
                        </script>
                        <!-- Submit -->
                        <div class="input-field">
                            <button type="submit" class="btn blue darken-3 waves-effect waves-light">Confirm</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>
